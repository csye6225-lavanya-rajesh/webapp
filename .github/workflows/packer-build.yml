name: Packer Build

on:
  push:
    branches:
      - main

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.16
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - ${{ secrets.DB_PORT }}:${{ secrets.DB_PORT }}

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install Dependencies
        run: yarn install

      - name: Wait for PostgreSQL to be Ready
        run: |
          until pg_isready -h localhost -U ${{ secrets.DB_USER }}; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done

      - name: Run Tests
        run: yarn test

  build-artifact:
    name: Build and Upload Application Artifact
    runs-on: ubuntu-latest
    needs: test-and-build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Application Artifact
        run: |
          mkdir -p artifacts
          echo "Application Artifact" > artifacts/app.zip

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: application-artifact
          path: artifacts/app.zip

  build-custom-image:
    name: Build Packer Custom Image (AWS & GCP)
    runs-on: ubuntu-latest
    needs: build-artifact

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download Application Artifact
        uses: actions/download-artifact@v2
        with:
          name: application-artifact
          path: packer/artifacts

      - name: Install Packer
        uses: hashicorp/setup-packer@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_CREDENTIALS_ACCESSKEY }}
          aws-secret-access-key: ${{ secrets.AWS_CREDENTIALS_SECRETACCESSKEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Run Packer Build for AWS & GCP
        run: |
          cd packer
          export PACKER_VAR_artifact_path="../webapp.zip"
          packer build machine-image.pkr.hcl
